name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  scan:
    name: Sonar Scan
    if: "false"
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.0
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  build:
    name: Build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
            maven-version: 3.6.0
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests
      - name: Store war file
        uses: actions/upload-artifact@v2
        with:
          name: actions-test-pr-${{ github.event.number }}
          path: target/*.war

  package:
    name: Dockerize
    runs-on: self-hosted
    needs: build
    steps:
      - name: Fetch war file
        uses: actions/download-artifact@v2
        with:
          name: actions-test-pr-${{ github.event.number }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: eduardohmg/actions-test:pr-${{ github.event.number }}

  deploy-preview:
    name: Deploy Preview
    runs-on: self-hosted
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker pull
        id: docker_pull
        run: docker pull eduardohmg/actions-test:pr-${{ github.event.number }}
      - name: Docker Run
        id: docker_run
        run: |
          docker run -d -P \
            -l traefik.enable=true \
            -l traefik.frontend.rule=Host:pr-${{ github.event.number }}.dev.loc \
            -l traefik.protocol=http \
            --name pr-${{ github.event.number }} \
            eduardohmg/actions-test:pr-${{ github.event.number }}

name: Build and Publish

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

env:
  ARTIFACT_NAME: server_war

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - uses: actions/create-outputs@v0.0.0-fake
        id: test
          - uses: LouisBrunner/checks-action@v1.1.1
            if: always()
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              name: Test XYZ
              conclusion: ${{ job.status }}
              output: |
                {"summary":${{ steps.test.outputs.summary }}}
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
            maven-version: 3.6.0
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests
      
      - name: Store war file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: target/server.war

  package:
    name: Dockerize and Publish
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v4.5

      - name: Set variables
        run: echo "BRANCH_NAME=${{ steps.branch_name.outputs.current_branch }}" >> $GITHUB_ENV
      
      - name: Checkout branch
        uses: actions/checkout@v2
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Fetch war file
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: target
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: eduardohmg/actions-test:${{ env.BRANCH_NAME }}